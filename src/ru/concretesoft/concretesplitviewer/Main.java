/*
 * Main.java
 *
 * Created on 27 Июнь 2006 г., 14:30
 */

package ru.concretesoft.concretesplitviewer;

import java.awt.Color;
import java.awt.Dimension;
import java.io.File;
import java.io.IOException;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Properties;
import java.util.TreeSet;
import java.util.Vector;
import javax.swing.DefaultListSelectionModel;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.ListModel;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListDataEvent;
import javax.swing.event.ListDataListener;
import javax.swing.event.ListSelectionListener;
import ru.spb.ConcreteSoft.tipWindow.TipWindow;

/**
 *
 * @author  Мытинский Леонид
 *
 * Основное окно программы.
 * Содержит две кнопки, для открытия "сплитов"; два списка: один для выбора группы, другой для выбора спортсменов;
 * поле для отображения графиков. 
 */
public class Main extends javax.swing.JFrame {
    private JFileChooser jFC; // Объект для выбора файлов
    private LapsTopPanel lTP;
    private GroupListModel groupListModel; // модель списка для выбора групп
    private AthleteListModel lM2; // модель списка для выбора спортсменов
    private GroupSelectionModel gSM; // модель выбора для групп
//    private int[] viewSplits; // массив содержащий номера пунктов участвующих в просмотре
    private SplitViewer[] viewers = new SplitViewer[]{
        new StandardSplitViewer(),
        new SecondBestSplitViewer()
    }; // массив возможных вариантов просмотра
    private File propertiesFile;
    private Properties properties;
    
    private static final String PROPERTIES_FILE_NAME = "properies.xml";
    private static final String DIRECTORY_NAME = ".ConcreteSplitViewer";
//    private TipThreadSplitViewer tipThread;
//    private TipWindow tipWindow;
    /** Creates new form Main */
    public Main() {
//        tipWindow = new TipWindow();
        loadProperties();
        initComponents();
        
        
        // Инициализация переменных объекта
        jFC = new JFileChooser();
        jFC.setCurrentDirectory(new File(properties.getProperty("Directory")));
        
        groupListModel = new GroupListModel();
        lM2 = new AthleteListModel(getGraphics().getFontMetrics());
        lM2.setGroupsList(jList1);
        lTP = new LapsTopPanel(lM2);
        lTP.setPreferredSize(new Dimension(100,20));
        lTP.setAlignmentX(1.0f);
        // Добавление возможных вариантов просмотра в выпадающий список
        for(int i=0;i<viewers.length;i++){
            jComboBox1.addItem(viewers[i]);
            viewers[i].setModel(lM2);
        }
        

        jPanel1.add((javax.swing.JPanel)jComboBox1.getSelectedItem(),java.awt.BorderLayout.CENTER);
        jPanel1.add(lTP,java.awt.BorderLayout.NORTH);
//        tipThread = new TipThreadSplitViewer(tipWindow, (SplitViewer)jComboBox1.getSelectedItem());
//        tipThread.start();
        // Задание моделей для списков
        jList1.setModel(groupListModel);
        gSM = new GroupSelectionModel(groupListModel);
        gSM.addListSelectionListener(lM2);
        groupListModel.addListDataListener(gSM);
        jList1.setSelectionModel(gSM);
        jList2.setModel(lM2);
        jList2.setSelectionModel(lM2);
        
        //load last file from previous session
        String typeOfLastFile = properties.getProperty("Type_of_last_file");
        File lastFile = new File(properties.getProperty("The_Last_File"));
        if((typeOfLastFile!=null)&&(lastFile!=null)){
            try{
                
                SplitReader splitReader = null;
                
                if(typeOfLastFile.equals("OSV")){
                    splitReader = new OSVReader(lastFile);
                }else if (typeOfLastFile.equals("SFR")){
                    splitReader = new SFReader(lastFile);
                }else;
                
                if(splitReader != null)
                    readSplits(splitReader);
                else;
                
            }catch(IOException e){
                System.out.println(e.getMessage());
            }
        }else;

    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jToolBar2 = new javax.swing.JToolBar();
        jComboBox1 = new javax.swing.JComboBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(java.util.ResourceBundle.getBundle("ru/concretesoft/concretesplitviewer/i18on").getString("ConcreteSplitViewer"));
        jSplitPane1.setResizeWeight(0.9);
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.Y_AXIS));

        jScrollPane1.setPreferredSize(new java.awt.Dimension(200, 200));
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(jList1);

        jPanel2.add(jScrollPane1);

        jScrollPane2.setPreferredSize(new java.awt.Dimension(200, 200));
        jList2.setSelectionBackground(new java.awt.Color(255, 255, 255));
        jList2.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList2ValueChanged(evt);
            }
        });
        jList2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList2MouseClicked(evt);
            }
        });

        jScrollPane2.setViewportView(jList2);

        jPanel2.add(jScrollPane2);

        jSplitPane1.setRightComponent(jPanel2);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel1.setPreferredSize(new java.awt.Dimension(400, 400));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        jSplitPane1.setLeftComponent(jPanel1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jSplitPane1, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridLayout(1, 0));

        jButton1.setText(java.util.ResourceBundle.getBundle("ru/concretesoft/concretesplitviewer/i18on").getString("OSV"));
        jButton1.setToolTipText(java.util.ResourceBundle.getBundle("ru/concretesoft/concretesplitviewer/i18on").getString("Open_OSV_file"));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jToolBar1.add(jButton1);

        jButton2.setText(java.util.ResourceBundle.getBundle("ru/concretesoft/concretesplitviewer/i18on").getString("SFR"));
        jButton2.setToolTipText(java.util.ResourceBundle.getBundle("ru/concretesoft/concretesplitviewer/i18on").getString("Open_SFR_file"));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jToolBar1.add(jButton2);

        jPanel3.add(jToolBar1);

        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jToolBar2.add(jComboBox1);

        jPanel3.add(jToolBar2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(jPanel3, gridBagConstraints);

        jMenu1.setText(java.util.ResourceBundle.getBundle("ru/concretesoft/concretesplitviewer/i18on").getString("File"));
        jMenuItem1.setText(java.util.ResourceBundle.getBundle("ru/concretesoft/concretesplitviewer/i18on").getString("Open_OSV"));
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });

        jMenu1.add(jMenuItem1);

        jMenuItem2.setText(java.util.ResourceBundle.getBundle("ru/concretesoft/concretesplitviewer/i18on").getString("Open_SFR"));
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });

        jMenu1.add(jMenuItem2);

        jMenu1.add(jSeparator1);

        jMenuItem3.setText(java.util.ResourceBundle.getBundle("ru/concretesoft/concretesplitviewer/i18on").getString("Exit"));
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });

        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText(java.util.ResourceBundle.getBundle("ru/concretesoft/concretesplitviewer/i18on").getString("Help"));
        jMenuItem4.setText(java.util.ResourceBundle.getBundle("ru/concretesoft/concretesplitviewer/i18on").getString("About"));
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });

        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        JDialog aboutDialog = new AboutDialog(this);
        
        aboutDialog.setLocationRelativeTo(jPanel1);
        aboutDialog.setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed
    /**
     * Exit from program by choosing menu item File->Exit
     * 
     * @param  evt  <code>ActionEvent</code>
     */
    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem3ActionPerformed
    /**
     * Method calls when chose menu item File->"Open SFR"
     * Метод, вызываемый по выбору пункта меню (File)Файл->(Open SFR)Открыть SFR
     * 
     * Call method jButton2ActionPerformed
     * Показывает диалоговое окно выбора файла, и если файл выбран, то читает этот файл
     *
     * @param  evt <code>ActionEvent</code>
     * @see jButton2ActionPerformed(java.awt.event.ActionEvent evt)
     */
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        openSFRFileWithDialog();
    }//GEN-LAST:event_jMenuItem2ActionPerformed
    /**
     * Method calls when chose menu item File->"Open OSV"
     * Метод, вызываемый по выбору пункта меню (File)Файл->(Open OSV)Открыть OSV
     * 
     * Call method jButton1ActionPerformed
     * Показывает диалоговое окно выбора файла, и если файл выбран, то читает этот файл
     *
     * @param  evt <code>ActionEvent</code>
     * @see jButton1ActionPerformed(java.awt.event.ActionEvent evt)
     */
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        openOSVFileWithDialog();
    }//GEN-LAST:event_jMenuItem1ActionPerformed
    /**
     * Метод, вызываемый по нажатию на кнопку, для открытия SFR сплитов
     * 
     * Показывает диалоговое окно выбора файла, и если файл выбран, то читает этот файл
     *
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        openSFRFileWithDialog();
    }//GEN-LAST:event_jButton2ActionPerformed
    
    // Обработчик щелчка мышки на панели просмотра сплитов
    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        SplitViewer sV = (SplitViewer)jComboBox1.getSelectedItem();
        
        if((evt.getButton()==evt.BUTTON2)||(evt.getMouseModifiersText(evt.getModifiers()).equals("Shift+Button1"))){
            lM2.restoreAllSplits();
        }
        else if(evt.getButton()==evt.BUTTON1){
            
            sV.removeSplit(evt.getX());
        }
    }//GEN-LAST:event_jPanel1MouseClicked
    
    
    // Обработчик выбора режима просмотра
    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        jPanel1.removeAll();
//        if(tipThread!=null)
//            tipThread.finish();
//        else;
        
        if(evt.getStateChange()==evt.SELECTED){
            SplitViewer sV = (SplitViewer)evt.getItem();
            jPanel1.add((javax.swing.JPanel)jComboBox1.getSelectedItem(),java.awt.BorderLayout.CENTER);
            jPanel1.add(lTP,java.awt.BorderLayout.NORTH);
//            tipThread = new TipThreadSplitViewer(tipWindow, (SplitViewer)jComboBox1.getSelectedItem());
//            tipThread.start();
            this.validate();
            repaint();
        }else;
    }//GEN-LAST:event_jComboBox1ItemStateChanged
    
    // Обработчик изменения выбора спортсменов
    private void jList2ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList2ValueChanged


    }//GEN-LAST:event_jList2ValueChanged
    
    
    // Обработчик изменения выбора групп
    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged

    }//GEN-LAST:event_jList1ValueChanged

    private void jList2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList2MouseClicked

    }//GEN-LAST:event_jList2MouseClicked

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked

    }//GEN-LAST:event_jList1MouseClicked
    
    /**
     * Метод, вызываемый по нажатию на кнопку, для открытия OSV сплитов
     * 
     * Показывает диалоговое окно выбора файла, и если файл выбран, то читает этот файл
     *
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        openOSVFileWithDialog();
        
    }//GEN-LAST:event_jButton1ActionPerformed
    private void openOSVFileWithDialog(){
        Vector<String> extensions = new Vector<String>();
        extensions.add("osv");
        File file = showFileChooser(extensions);
        if(file != null){
            try{
                properties.setProperty("Type_of_last_file","OSV");
                saveProperties();
                SplitReader osvReader = new OSVReader(file);
                readSplits(osvReader);
            }
            catch(IOException e){
                System.out.println(e);
            }
        } else;
    }
    
    
    private void openSFRFileWithDialog() {
        Vector<String> extensions = new Vector<String>();
        extensions.add("txt");
        File file = showFileChooser(extensions);
        if(file != null){
            try{
                properties.setProperty("Type_of_last_file","SFR");
                saveProperties();
                SplitReader sfReader = new SFReader(file);
                readSplits(sfReader);
            }
            catch(IOException e){
                System.out.println(e);
            }
        } else;
    }
    /** 
     * Чтение сплитов с помощью ридера
     *
     */
    private void readSplits(SplitReader sR){
        groupListModel.setGroups(sR.getAllGroups());
    }
    
    private File showFileChooser(Vector<String> exts){
        clear();
        
        // Задание параметров фильтра файлов и вызов диалогового окна выбора файла
        MyFileFilter filter = new MyFileFilter(exts);
        
        jFC.setFileFilter(filter);
        int val = jFC.showOpenDialog(this);
        File selectedFile = null;
        // Если нажата кнопка OK, то прочитать файл и заполнить список групп
        if(val == jFC.APPROVE_OPTION){
            selectedFile = jFC.getSelectedFile();
            properties.setProperty("Directory", jFC.getCurrentDirectory().getPath());
            properties.setProperty("The_Last_File", selectedFile.getPath());
            try{
                saveProperties();
            }catch(IOException e){
                System.out.println(e.getMessage());
            }
        }else;
        jFC.removeChoosableFileFilter(filter);
        return selectedFile;
    }
    /**
     *
     * Method for loading properties from home directory
     *
     */
    private void loadProperties(){
        String path = System.getProperty("user.home");
        String separator = System.getProperty("file.separator");
        File parent = new File(path+separator+DIRECTORY_NAME);
        propertiesFile = new File(parent, PROPERTIES_FILE_NAME);
        try{
            if(parent.exists()){
                if(propertiesFile.createNewFile()){
                    fillDefaultProperties(propertiesFile,path,separator);
                }
                else{
                    properties = new Properties();
                    java.io.FileInputStream fIS = new java.io.FileInputStream(propertiesFile);
                    properties.loadFromXML(fIS);
                }
            }
            else{
                parent.mkdir();
                propertiesFile.createNewFile();
                fillDefaultProperties(propertiesFile,path,separator);
            }
        }
        catch(java.io.IOException e){
            
        }
    }
    /**
     * Methof for generating default properties
     *
     *
     */
    private void fillDefaultProperties(File prop, String path, String separator) throws java.io.IOException{
        properties = new Properties();

        properties.setProperty("Directory",path);

        java.io.FileOutputStream fOS = new java.io.FileOutputStream(prop);
        properties.storeToXML(fOS,"Properties");
    }
    /**
     * Method save properties
     *
     *
     */
    public void saveProperties() throws java.io.IOException{

        java.io.FileOutputStream fOS = new java.io.FileOutputStream(propertiesFile);
        properties.storeToXML(fOS,"Properties");
        
    }
    /** "Обнуление" всех параметров оставшихся от предыдущего файла
     *
     */
    private void clear(){
        lM2.setAthletes(null);
        lM2.setViewSplits(null);
        jList1.clearSelection();
        jList1.ensureIndexIsVisible(0);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }


    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    // End of variables declaration//GEN-END:variables
   
   
}
